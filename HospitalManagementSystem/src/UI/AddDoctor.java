/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Doctor;
import Model.DoctorDirectory;
import javax.swing.JOptionPane;

/**
 *
 * @author vivek
 */
public class AddDoctor extends javax.swing.JPanel {

    /**
     * Creates new form AddDoctor
     */
    
    DoctorDirectory docDir;
    public AddDoctor(DoctorDirectory docDir) {
        initComponents();
        this.docDir = docDir;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GenderLabel = new javax.swing.JLabel();
        AgeLabel = new javax.swing.JLabel();
        txtgender = new javax.swing.JComboBox<>();
        txtname = new javax.swing.JTextField();
        txtage = new javax.swing.JTextField();
        txtcontact = new javax.swing.JTextField();
        ContactLabel = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        NewEmployeeLabel = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        NameLabel = new javax.swing.JLabel();
        ResetButton = new javax.swing.JButton();
        PersonalInfoLabel1 = new javax.swing.JLabel();
        emLab = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        EmailLabel1 = new javax.swing.JLabel();

        GenderLabel.setText("Gender");

        AgeLabel.setText("Age");

        txtgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select gender...", "Male", "Female", "Other" }));

        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
        });

        txtcontact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcontactKeyReleased(evt);
            }
        });

        ContactLabel.setText("Contact");

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        txtemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtemailKeyReleased(evt);
            }
        });

        EmailLabel.setText("Email Id");

        NewEmployeeLabel.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        NewEmployeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NewEmployeeLabel.setText("Add New Doctor");

        AddButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        AddButton.setText("ADD");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        NameLabel.setText("Name");

        ResetButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        PersonalInfoLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        PersonalInfoLabel1.setText("Conatct Information");

        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });
        txt_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_idKeyReleased(evt);
            }
        });

        EmailLabel1.setText("Doctor ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ResetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(NewEmployeeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ContactLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(208, 208, 208))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PersonalInfoLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(107, 107, 107))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(NameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(9, 9, 9))
                                            .addComponent(GenderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(AgeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(21, 21, 21)))
                                        .addGap(83, 83, 83))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(EmailLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(41, 41, 41)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_id)
                                    .addComponent(txtname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtgender, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtage, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(emLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(83, 83, 83)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtemail)
                            .addComponent(txtcontact))))
                .addGap(306, 306, 306))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(NewEmployeeLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailLabel1))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenderLabel)
                    .addComponent(txtgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgeLabel)
                    .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(PersonalInfoLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ContactLabel)
                    .addComponent(txtcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emLab, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EmailLabel))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(413, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased
        // TODO add your handling code here:
        //        String PATTERN = "^[A-Za-z\\\\s]+$";
        //        Pattern pat = Pattern.compile(PATTERN);
        //        Matcher match = pat.matcher(NameTxtBox.getText());
        //        if(!match.matches() || NameTxtBox.getText().equals(""))
        //        {
            //            nLbl.setText("Name is incorrect!");
            //        }
        //        else
        //        {
            //            nLbl.setText("");
            //        }
    }//GEN-LAST:event_txtnameKeyReleased

    private void txtcontactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcontactKeyReleased
        // TODO add your handling code here:
        //        String cellNo = ContactTxtBox.getText();
        //
        //        int length = cellNo.length();
        //        char c = evt.getKeyChar();
        //        if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' ){
            //            if(length < 10)
            //            {
                //                ContactTxtBox.setEditable(true);
                //            }
            //            else
            //            {
                //                ContactLab.setText("Number is incorrect");
                //                ContactTxtBox.setText("");
                //
                //            }
            //        }
    }//GEN-LAST:event_txtcontactKeyReleased

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtemailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyReleased
        // TODO add your handling code here:
        //        String PATTERN = "^[a-zA-Z0-9] (0,30)[@] [a-zA-Z0-9] (0,10) [.] [a-zA-Z] (0,5)$";
        //        Pattern pat = Pattern.compile(PATTERN);
        //        Matcher match = pat.matcher(EmailTxtBox.getText());
        //        if(!match.matches() || EmailTxtBox.getText().equals(""))
        //            emLab.setText("Email is incorrect");
        //        else if(match.matches())
        //            emLab.setText("");
        //        else
        //            emLab.setText("Email Format is ");
    }//GEN-LAST:event_txtemailKeyReleased

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        Doctor doc = docDir.addNewDoctor();
        
        String docId = txt_id.getText();
        String name = txtname.getText();
        String gender = txtgender.getSelectedItem().toString();
        String age = txtage.getText();
        String contact = txtcontact.getText();
        String email = txtemail.getText();
        boolean valid = validationForFields();
               
        if(valid)
        {
        doc.setDocID(docId);
        doc.setDocName(name);
        doc.setGender(gender);
        doc.setAge(age);
        doc.setContact(contact);
        doc.setEmail(email);

        JOptionPane.showMessageDialog(this , "New Doctor Information Added!");
        
        txt_id.setText("");
        txtname.setText("");
        txtage.setText("");
        txtcontact.setText("");
        txtemail.setText("");
        txtgender.setName("select gender");
        }    
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed

        
        txt_id.setText("");
        txtname.setText("");
        txtage.setText("");
        txtcontact.setText("");
        txtemail.setText("");
        txtgender.setName("select gender");
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idActionPerformed

    private void txt_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idKeyReleased

    private boolean validationForFields() {
   
                if(txtname.getText().length()==0)
                {
                     JOptionPane.showMessageDialog(this," Name Can't be blank, please enter Doctor Name");
                     txtname.requestFocus();
                     txtname.setText("");
                     return false;
                }
               
               else{
        if(!txtname.getText().matches("^[a-zA-Z]+[\\-'\\s]?[a-zA-Z ]+$"))
            {
                 JOptionPane.showMessageDialog(this," Invalid Doctor name. ");
                 txtname.requestFocus();
                 txtname.setText("");
                 return false;
               
               
            }
          }
                   if(txt_id.getText().isBlank() )
    {
        JOptionPane.showMessageDialog(this," Doctor ID Can't be blank, please enter Doctor ID ");
        txt_id.requestFocus();
        txt_id.setText("");
        return false;
    }
        else
        {
           
             if(!txt_id.getText().matches("^[0-9]{0,3}$"))
             {
                JOptionPane.showMessageDialog(this," Invalid Doctor, Note : Doctor ID is of 3 digit  ");
                txt_id.requestFocus();
                return false;
               
             }  
        }
                   
           if(txtage.getText().isBlank() )
    {
        JOptionPane.showMessageDialog(this," Doctor Age Can't be blank, please enter Doctor Age ");
        txtage.requestFocus();
        txtage.setText("");
        return false;
    }
        else
        {
           
             if(!txtage.getText().matches("^[0-9]{0,2}$"))
             {
                JOptionPane.showMessageDialog(this," Age should be between 0 to 100 years old. ");
                txtage.requestFocus();
                return false;
               
             }  
        }
           
           if(txtcontact.getText().isBlank())
        {
         JOptionPane.showMessageDialog(this," Cell Number cannot be Blank ");
         txtcontact.requestFocus();
         txtcontact.setText("");
        return false;
        }
        else
        {
            if(!txtcontact.getText().matches("^[2-9]{2}[0-9]{8}$"))
            {
                    JOptionPane.showMessageDialog(this," Invalid Phone Number format, please enter a valid 10 digit US Phone No. ");
                    txtcontact.requestFocus();
                    txtcontact.setText("");
                   return false;
            }
        }
           
           if(txtgender.getSelectedIndex() == 0)
            {
                    JOptionPane.showMessageDialog(this," Please select a Gender ");
                    txtgender.requestFocus();
                    //comboCity.setText("");
                   return false;
            }
                   else if(txtemail.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this," Please enter the Email Id ");
            txtemail.requestFocus();
            txtemail.setText("");
            return false;
        }
        else
            if(!txtemail.getText().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
        + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"))
            {
            JOptionPane.showMessageDialog(this," Invalid email address ");
            txtemail.requestFocus();
            txtemail.setText("");
            return false;
        }
    return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JLabel ContactLabel;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JLabel EmailLabel1;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel NewEmployeeLabel;
    private javax.swing.JLabel PersonalInfoLabel1;
    private javax.swing.JButton ResetButton;
    private javax.swing.JLabel emLab;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtcontact;
    private javax.swing.JTextField txtemail;
    private javax.swing.JComboBox<String> txtgender;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
